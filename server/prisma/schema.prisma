generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
model User {
  id            Int        @id @default(autoincrement())
  firstName     String?    
  lastName      String?    
  email         String?    @unique
  password      String?    
  phoneNumber   Int?       
  image         String?    
  bio           String?    
  type          UserType?  
  address       String?    
  posts         Post[]     
  cart          Cart?      
  favourites    Favourite[] 
  history       History[]  
  notifications Notification[]
  chatsInitiated Chat[]     @relation("UserChats")       
  chatsReceived  Chat[]     @relation("ReceiverChats")   
  messages       Message[]  

  @@unique([id])
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String?   
  images      Json?     
  description String?   
  location    String?   
  price       Decimal?  
  category    PostCategory?
  rating      Int?      
  userId      Int       
  user        User      @relation(fields: [userId], references: [id])
  calendar    Calendar[] 
  favourites  Favourite[] 
  history     History[]  
  cartPosts   CartPost[] 
  map         Map?       
  
  @@unique([id])
}

model Calendar {
  id      Int       @id @default(autoincrement())
  date    DateTime? 
  isBooked Boolean  
  postId  Int       
  post    Post      @relation(fields: [postId], references: [id])

  @@unique([id])
}

model Favourite {
  userId Int
  postId Int
  user   User @relation(fields: [userId], references: [id])
  post   Post @relation(fields: [postId], references: [id])

  @@id([userId, postId])
}

model Cart {
  id        Int       @id @default(autoincrement())
  totalPrice Decimal?
  status    String?
  userId    Int       @unique  // Ensuring the userId is unique for one-to-one relation
  user      User      @relation(fields: [userId], references: [id])
  cartPosts CartPost[]
}

model CartPost {
  id       Int     @id @default(autoincrement())
  postId   Int     @unique  
  post     Post    @relation(fields: [postId], references: [id])
  cartId   Int
  cart     Cart    @relation(fields: [cartId], references: [id])
}



model History {
  id          Int       @id @default(autoincrement())
  bookingDate DateTime? 
  checkInDate DateTime? 
  checkOutDate DateTime? 
  status      String?   
  totalPrice  Decimal?  
  userId      Int       
  postId      Int       
  user        User      @relation(fields: [userId], references: [id])
  post        Post      @relation(fields: [postId], references: [id])

  @@unique([id])
}

model Notification {
  id        Int       @id @default(autoincrement())
  message   String?   
  status    String?   
  createdAt DateTime? 
  userId    Int       
  user      User      @relation(fields: [userId], references: [id])

  @@unique([id])
}

model Chat {
  id           Int       @id @default(autoincrement())
  userId       Int       
  receiverId   Int    
  user         User      @relation("UserChats", fields: [userId], references: [id]) // Initiating user
  receiver     User      @relation("ReceiverChats", fields: [receiverId], references: [id]) // Receiving user
  messages     Message[]
  createdAt    DateTime  @default(now())

  @@unique([id])
}


model Message {
  id       Int       @id @default(autoincrement())
  content  String?
  sentAt   DateTime  @default(now())
  isRead   Boolean   @default(false)
  userId   Int      
  chatId   Int       
  callStatus String?    // For tracking call status
  duration  Int?        // For call duration
  type     MessageType? @default(TEXT)
  
  user     User     @relation(fields: [userId], references: [id])
  chat     Chat     @relation(fields: [chatId], references: [id])
  
  @@unique([id])
}
model CallLog {
  id         Int      @id @default(autoincrement())
  callerId   Int
  receiverId Int
  startTime  DateTime
  endTime    DateTime?
  duration   Int?
  status     String   // e.g., MISSED, ACCEPTED, REJECTED
}

model Map {
  id         Int       @id @default(autoincrement())
  latitude   Decimal?  
  longitude  Decimal?  
  postId     Int       @unique  // Add @unique attribute here
  post       Post      @relation(fields: [postId], references: [id])

  @@unique([id])
}

enum UserType {
  host
  guest
}

enum PostCategory {
  house
  apartment
  villa
  hotel
  historical
  lake
  beachfront
  countryside
  castles
  experiences
  camping
  desert
  luxe
  islands
}
enum MessageType {
  TEXT
  IMAGE
  SYSTEM
  NOTIFICATION
  VOICE
  VIDEO_CALL
}